mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = F) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
w1 = wordcloud(tdm_male$term, tdm_male$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
w2 = wordcloud(tdm_female$term, tdm_female$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
w1 = wordcloud(tdm_male$term, tdm_male$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
wordcloud(tdm_male$term, tdm_male$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
wordcloud(tdm_female$term, tdm_female$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
wordcloud(tdm_female$term, tdm_female$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
wordcloud(tdm_female$term, tdm_female$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
wordcloud(tdm_male$term, tdm_male$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
grid.arrange(arrangeGrob(p1, p2))
male_top_terms = male_topics %>%
group_by(topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
male.p = male_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = F) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
male.p
female.p
male.p
male.p = male_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = F) +
facet_wrap(~ topic, scales = "free") +
coord_flip()+
labs(title = "Male Topics ")
male.p
female.p = female_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = F) +
facet_wrap(~ topic, scales = "free") +
coord_flip()+
labs(title = "Female Topics ")
female.p
female.p = female_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = F) +
facet_wrap(~ topic, scales = "free") +
coord_flip()+
labs(title = "Female Topics ")
female.p
wordcloud(tdm_yes$term, tdm_yes$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
wordcloud(tdm_no$term, tdm_no$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
wordcloud(tdm_yes$term, tdm_yes$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
wordcloud(tdm_no$term, tdm_no$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
yes_words = data_frame(line = 1:length(yes.hm), text = yes.hm)
yes_words = yes_words %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
filter(n > 1749) %>%
mutate(word = reorder(word, n))
yes.hm = filter(hm.demographic,parenthood == "y")$text
yes_words = data_frame(line = 1:length(yes.hm), text = yes.hm)
yes_words = yes_words %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
filter(n > 1749) %>%
mutate(word = reorder(word, n))
no.hm = filter(hm.demographic,parenthood == "n")$text
no_words = data_frame(line = 1:length(no.hm), text = no.hm)
no_words = no_words %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
filter(n > 2226) %>%
mutate(word = reorder(word, n))
p3 = ggplot(data = yes_words,aes(x = reorder(word,-n),
y = n))+
geom_bar(stat = "identity", fill = "orange")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
labs(title = "Parenthood Top 10 Key Words",
x = "Happy Moments", y = "Frequency")
p4 = ggplot(data = no_words,aes(x = reorder(word,-n),
y = n))+
geom_bar(stat = "identity", fill = "lightblue")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
labs(title = "Childlessness Top 10 Key Words",
x = "Happy Moments", y = "Frequency")
grid.arrange(arrangeGrob(p3, p4))
wordcloud(tdm_yes$term, tdm_yes$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
wordcloud(tdm_no$term, tdm_no$`sum(count)`,
scale = c(5,0.1),
max.words = 100,
min.freq = 1,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.05, 'inches')) +
geom_node_point(color = "pink", size = 3) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
ggarrange(p5, p6, p7, p8, p9,common.legend=TRUE,legend = 'right')
grid.arrange(arrangeGrob(p5, p6, p7, p8, p9))
p
ggarrange(p.af, p.as, p.eu, p.na, p.sa, p.oc,common.legend=TRUE,legend = 'right')
ggarrange(p.af, p.as, p.eu, p.na, p.sa, p.oc,common.legend=TRUE)
ggarrange(p.af, p.as, p.eu, p.na, p.sa, p.oc, ncol = 3, nrow = 2))
ggarrange(p.af, p.as, p.eu, p.na, p.sa, p.oc, ncol = 3, nrow = 2)
ggarrange(p5, p6, p7, p8, p9, nrow = 3, ncol = 2)
ggarrange(p5, p6, p7, p8, p9, nrow = 2, ncol = 3)
p = plot_geo(dataformap) %>%
add_trace(
z = ~Worker, color = ~Worker, colors = 'Blues',
text = ~text, locations = ~Nation, marker = list(line = l)
) %>%
colorbar(title = 'Number of Amazon MTurk Workers') %>%
layout(
title = 'Top 10 key words of Happy Moments in Each Continent',
geo = g,
autosize = FALSE,
width = 900,
margin = list(t=25, l=0, r=0, d=0)
)
p
# set path for data file
setwd("~/Desktop/GR5243 Applied Data Science/Project_1/Spring2019-Proj1-xinyihutay/output")
ggarrange(p.af, p.as, p.eu, p.na, p.sa, p.oc, ncol = 3, nrow = 2)
d.OC
v.AF
mode(v.AF)
sum(v.AF)
d.AF = data.frame(word = names(v.AF)[1:10],freq=v.AF[1:10]/sum(v.AF))
d.AF
mean(v.AF)
round(100*v.AF[1:10]/sum(v.AF),2)
d.AS = data.frame(word = names(v.AS)[1:10],freq=round(100*v.AS[1:10]/sum(v.AF),2))
d.EU = data.frame(word = names(v.EU)[1:10],freq=round(100*v.EU[1:10]/sum(v.AF),2))
d.SA = data.frame(word = names(v.SA)[1:10],freq=round(100*v.SA[1:10]/sum(v.AF),2))
d.OC = data.frame(word = names(v.OC)[1:10],freq=round(100*v.OC[1:10]/sum(v.AF),2))
NA_words
NA_words
mode(names(v.SA))
NA_words$word
s.character(NA_words$word)
as.character(NA_words$word)
v.SA$word
d.SA$word
count=as.numeric(NA_words$n)
d.NA = data.frame(word = as.character(NA_words$word), freq=round(100*count/sum(count),2))
d.NA
hm.region = data.frame(AF = d.AF$word, AF.freq = d.AF$freq,
AS = d.AS$word, AS.freq = d.AS$freq,
EU = d.EU$word, EU.freq = d.EU$freq,
N.A = d.NA$word, NA.freq = d.NA$freq,
SA = d.SA$word, SA.freq = d.SA$freq,
OC = d.OC$word, OC.freq = d.OC$freq)
View(hm.region)
d.AS = data.frame(word = names(v.AS)[1:10],freq=round(100*v.AS[1:10]/sum(v.AS),2))
d.AS
d.AF = data.frame(word = names(v.AF)[1:10],freq=round(100*v.AF[1:10]/sum(v.AF),2))
d.AF
hm.region = data.frame(AF = d.AF$word, AF.freq = d.AF$freq,
AS = d.AS$word, AS.freq = d.AS$freq,
EU = d.EU$word, EU.freq = d.EU$freq,
N.A = d.NA$word, NA.freq = d.NA$freq,
SA = d.SA$word, SA.freq = d.SA$freq,
OC = d.OC$word, OC.freq = d.OC$freq)
View(hm.region)
for(i in 1:6){
hover[i] = paste( '<b>', continent[i],':<br>',
paste('   ','</b>',hm.region[i,1], ': ', hm.region[i,2],'% <br>',
collapse=""),
collapse="")
}
p = plot_geo(dataformap) %>%
add_trace(
z = ~Worker, color = ~Worker, colors = 'Blues',
text = ~text, locations = ~Nation, marker = list(line = l)
) %>%
colorbar(title = 'Number of Amazon MTurk Workers') %>%
layout(
title = 'Top 10 key words of Happy Moments in Each Continent',
geo = g,
autosize = FALSE,
width = 900,
margin = list(t=25, l=0, r=0, d=0)
)
p
rank.text = rep(hover,nation.in.continent)
dataformap = data.frame(Nation = all.nation,
Worker = pop,
Continent = cont,
text = rank.text)
p = plot_geo(dataformap) %>%
add_trace(
z = ~Worker, color = ~Worker, colors = 'Blues',
text = ~text, locations = ~Nation, marker = list(line = l)
) %>%
colorbar(title = 'Number of Amazon MTurk Workers') %>%
layout(
title = 'Top 10 key words of Happy Moments in Each Continent',
geo = g,
autosize = FALSE,
width = 900,
margin = list(t=25, l=0, r=0, d=0)
)
p
hm.region = data.frame(AF = d.AF$word,
AS = d.AS$word,
EU = d.EU$word,
N.A = d.NA$word,
SA = d.SA$word,
OC = d.OC$word)
hm.reg.freq = data.frame(AF.freq = d.AF$freq,
AS.freq = d.AS$freq,
EU.freq = d.EU$freq,
NA.freq = d.NA$freq,
SA.freq = d.SA$freq,
OC.freq = d.OC$freq)
hm.reg.freq
hover = character(6)
for(i in 1:6){
hover[i] = paste( '<b>', continent[i],':<br>',
paste('   ','</b>',hm.region[[i]], ': ', hm.reg.freq[[i]],'% <br>',
collapse=""),
collapse="")
}
rank.text = rep(hover,nation.in.continent)
rank.text
rank.text = rep(hover,nation.in.continent)
dataformap = data.frame(Nation = all.nation,
Worker = pop,
Continent = cont,
text = rank.text)
p = plot_geo(dataformap) %>%
add_trace(
z = ~Worker, color = ~Worker, colors = 'Blues',
text = ~text, locations = ~Nation, marker = list(line = l)
) %>%
colorbar(title = 'Number of Amazon MTurk Workers') %>%
layout(
title = 'Top 10 key words of Happy Moments in Each Continent',
geo = g,
autosize = FALSE,
width = 900,
margin = list(t=25, l=0, r=0, d=0)
)
p
AF.hm = hm.country$text[AF]
tdm.AF = TermDocumentMatrix(VCorpus(VectorSource(AF.hm)))
m.AF = as.matrix(tdm.AF)
v.AF = sort(rowSums(m.AF),decreasing=TRUE)
d.AF = data.frame(word = names(v.AF)[1:10],freq=round(100*v.AF[1:10]/sum(v.AF),2))
AS.hm = hm.country$text[AS]
tdm.AS = TermDocumentMatrix(VCorpus(VectorSource(AS.hm)))
m.AS = as.matrix(tdm.AS)
v.AS = sort(rowSums(m.AS),decreasing=TRUE)
d.AS = data.frame(word = names(v.AS)[1:10],freq=round(100*v.AS[1:10]/sum(v.AS),2))
EU.hm = hm.country$text[EU]
tdm.EU = TermDocumentMatrix(VCorpus(VectorSource(EU.hm)))
m.EU = as.matrix(tdm.EU)
v.EU = sort(rowSums(m.EU),decreasing=TRUE)
d.EU = data.frame(word = names(v.EU)[1:10],freq=round(100*v.EU[1:10]/sum(v.EU),2))
NA.hm = hm.country$text[N.A]
NA_words = data_frame(line = 1:length(NA.hm), text = NA.hm)
NA_words = NA_words %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
filter(n > 2972) %>%
mutate(word = reorder(word, n))
count = as.numeric(NA_words$n)
d.NA = data.frame(word = as.character(NA_words$word), freq=round(100*count/sum(count),2))
SA.hm = hm.country$text[S.A]
tdm.SA = TermDocumentMatrix(VCorpus(VectorSource(SA.hm)))
m.SA = as.matrix(tdm.SA)
v.SA = sort(rowSums(m.SA),decreasing=TRUE)
d.SA = data.frame(word = names(v.SA)[1:10],freq=round(100*v.SA[1:10]/sum(v.SA),2))
OC.hm = hm.country$text[OC]
tdm.OC = TermDocumentMatrix(VCorpus(VectorSource(OC.hm)))
m.OC = as.matrix(tdm.OC)
v.OC = sort(rowSums(m.OC),decreasing=TRUE)
d.OC = data.frame(word = names(v.OC)[1:10],freq=round(100*v.OC[1:10]/sum(v.OC),2))
hm.region = data.frame(AF = d.AF$word,
AS = d.AS$word,
EU = d.EU$word,
N.A = d.NA$word,
SA = d.SA$word,
OC = d.OC$word)
hm.reg.freq = data.frame(AF.freq = d.AF$freq,
AS.freq = d.AS$freq,
EU.freq = d.EU$freq,
NA.freq = d.NA$freq,
SA.freq = d.SA$freq,
OC.freq = d.OC$freq)
hover = character(6)
for(i in 1:6){
hover[i] = paste( '<b>', continent[i],':<br>',
paste('   ','</b>',hm.region[[i]], ': ', hm.reg.freq[[i]],'% <br>',
collapse=""),
collapse="")
}
rank.text = rep(hover,nation.in.continent)
dataformap = data.frame(Nation = all.nation,
Worker = pop,
Continent = cont,
text = rank.text)
p = plot_geo(dataformap) %>%
add_trace(
z = ~Worker, color = ~Worker, colors = 'Blues',
text = ~text, locations = ~Nation, marker = list(line = l)
) %>%
colorbar(title = 'Number of Amazon MTurk Workers') %>%
layout(
title = 'Top 10 key words of Happy Moments in Each Continent',
geo = g,
autosize = FALSE,
width = 900,
margin = list(t=25, l=0, r=0, d=0)
)
p
NA_words = NA_words %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
NA_words = data_frame(line = 1:length(NA.hm), text = NA.hm)
NA_words = NA_words %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
NA_words
###
NA_words = NA_words %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
NA_words = data_frame(line = 1:length(NA.hm), text = NA.hm)
###
NA_words = NA_words %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
total = sum(NA_words$n)
NA_words = NA_words %>%
filter(n > 2972) %>%
mutate(word = reorder(word, n))
###
count = as.numeric(NA_words$n)
d.NA = data.frame(word = as.character(NA_words$word), freq=round(100*count/total,2))
d.NA
hm.region = data.frame(AF = d.AF$word,
AS = d.AS$word,
EU = d.EU$word,
N.A = d.NA$word,
SA = d.SA$word,
OC = d.OC$word)
hm.reg.freq = data.frame(AF.freq = d.AF$freq,
AS.freq = d.AS$freq,
EU.freq = d.EU$freq,
NA.freq = d.NA$freq,
SA.freq = d.SA$freq,
OC.freq = d.OC$freq)
hover = character(6)
for(i in 1:6){
hover[i] = paste( '<b>', continent[i],':<br>',
paste('   ','</b>',hm.region[[i]], ': ', hm.reg.freq[[i]],'% <br>',
collapse=""),
collapse="")
}
rank.text = rep(hover,nation.in.continent)
dataformap = data.frame(Nation = all.nation,
Worker = pop,
Continent = cont,
text = rank.text)
p = plot_geo(dataformap) %>%
add_trace(
z = ~Worker, color = ~Worker, colors = 'Blues',
text = ~text, locations = ~Nation, marker = list(line = l)
) %>%
colorbar(title = 'Number of Amazon MTurk Workers') %>%
layout(
title = 'Top 10 key words of Happy Moments in Each Continent',
geo = g,
autosize = FALSE,
width = 900,
margin = list(t=25, l=0, r=0, d=0)
)
p
wordcloud(tdm.overall$term, tdm.overall$`sum(count)`,
scale = c(5,0.1),
max.words = 350,
min.freq = 5,
random.order = FALSE,
rot.per = 0.3,
use.r.layout = T,
random.color = FALSE,
colors = brewer.pal(8,"Accent"))
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.05, 'inches')) +
geom_node_point(color = "pink", size = 3) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
hm_top_terms %>%
mutate(term = reorder(term, beta)) %>%
ggplot(aes(term, beta, fill = factor(topic))) +
geom_col(show.legend = F) +
facet_wrap(~ topic, scales = "free") +
coord_flip()
